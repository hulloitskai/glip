version: '{branch}-{build}'
image:
  - Visual Studio 2015
  - Visual Studio 2017

clone_depth: 3
clone_folder: C:\gopath\src\github.com\steven-xie\glip

environment:
  GOPATH: C:\gopath
  MINGW64_DIR: C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\mingw64\bin
  GCC: x86_64-w64-mingw32-gcc.exe
  matrix:
    - GOROOT: C:\go
    - GOROOT: C:\go110

platform:
  - x64
  - x86

matrix:
  ## Calling PowerShell externally doesn't seem to be particularly stable
  ## on x86.
  allow_failures:
    - platform: x86

init:
  - git config --global core.autocrlf input

install:
  ## Configure MinGW, put proper GOBIN at the front of the path.
  - set PATH=%GOROOT%\bin;%MINGW64_DIR%;%PATH%

  ## Configure testing environment.
  - ps: if ($env:PLATFORM -Eq "x86") { $env:GOARCH = "386" }

  ## Log diagonistic information.
  - echo %GOPATH%
  - go version
  - go env
  - ps: $PSVersionTable.PSVersion

build: off
deploy: off

test_script:
  - ps: |
      if ($env:PLATFORM -Eq "x86") {
        ## Emulate tests on an x86 architecture.
        mingw32-make test-v
      } else {
        ## Test race conditions only on x64.
        mingw32-make test-race-v
      }

after_test:
  - ps: |
      if (Test-Path -PathType Leaf -Path "coverage.out") {
        $env:PATH = "C:\msys64\usr\bin;${env:PATH}"
        Invoke-WebRequest -Uri 'https://codecov.io/bash' -OutFile codecov.sh
        bash codecov.sh
      }
